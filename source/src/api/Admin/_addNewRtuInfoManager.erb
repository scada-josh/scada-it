
	/**
	 *
	 * @apiName AddNewRtuInfoManager
	 * @apiGroup Admin
	 * @apiVersion 0.1.0
	 *
	 * @api {post} /AdminAPI/addNewRtuInfoManager/ AddNewRtuInfoManager
	 * @apiDescription คำอธิบาย : ในส่วนนี้ใช้สำหรับข้อมูลใหม่เข้าไปในระบบทั้งใน tb_scada_host_info, tb_scada_station_df, tb_main01_user_rtu_info, tb_main02_scada_rtu_info
	 *
	 *
	 */
    function addNewRtuInfoManager($app, $pdo, $db) {


        /* ************************* */
        /* เริ่มกระบวนการรับค่าพารามิเตอร์จากส่วนของ Payload ซึ่งอยู่ในรูปแบบ JSON */
        /* ************************* */
        $headers = $app->request->headers;
        $ContetnType = $app->request->headers->get('Content-Type');

        /**
        * apidoc @apiSampleRequest, iOS RESTKit use content-type is "application/json"
        * Web Form, Advance REST Client App use content-type is "application/x-www-form-urlencoded"
        */
        if ($ContetnType == "application/json") {

             $request = $app->request();
             $result = json_decode($request->getBody());

             /* receive request */
             $paramListRTU = $result->listRTU;

 
          } else if ($ContetnType == "application/x-www-form-urlencoded"){

              //$userID = $app->request()->params('userID_param');
              //$userID = $app->request()->post('userID_param');
          }



          /* ************************* */
          /* เริ่มกระบวนการเชื่อมต่อกับฐานข้อมูล MySQL */
          /* ************************* */

          $reports = array();
          $numDM = count($paramListRTU);  // จำนวน DM
          

          for ($i=0; $i < $numDM; $i++) { 

               $tmpBranchCode = $paramListRTU[$i]->branch_code;
               $tmpZoneCode = $paramListRTU[$i]->zone_code;
               $tmpDmaCode = $paramListRTU[$i]->dma_code;
               $tmpDmCode = $paramListRTU[$i]->dm_code;
               $tmpIP = $paramListRTU[$i]->ip;
               $tmpLoggerCode = $paramListRTU[$i]->logger_code;
               $tmpComm = $paramListRTU[$i]->comm;
               $tmpRtuStatus = $paramListRTU[$i]->rtu_status;
               

               /*  Update Existing Records (tb_scada_host_info) Partial */
               <%= partial "/Admin/addNewRtuInfoManager_partials/_addNewRtuInfoManager_updateStatusExistingRecords" %>
               /*  Insert/Update Records (tb_scada_host_info) Partial */
               <%= partial "/Admin/addNewRtuInfoManager_partials/_addNewRtuInfoManager_insertUpdateHostTableRecords" %>
               /*  Check IP Address Duplicate (tb_scada_host_info) Partial */
               <%= partial "/Admin/addNewRtuInfoManager_partials/_addNewRtuInfoManager_checkIpAddressDuplicate" %>
               /*  Check DM Duplicate (tb_scada_host_info) Partial */
               <%= partial "/Admin/addNewRtuInfoManager_partials/_addNewRtuInfoManager_checkDmAddressDuplicate" %>
               
               /*  Insert/Update Records (tb_main01_user_rtu_info) Partial */
               <%= partial "/Admin/addNewRtuInfoManager_partials/_addNewRtuInfoManager_insertUpdateUserTableRecords" %>
               /*  Insert/Update Records (tb_main02_scada_rtu_info) Partial */
               <%= partial "/Admin/addNewRtuInfoManager_partials/_addNewRtuInfoManager_insertUpdateScadaTableRecords" %>




                $resons[] = array(
                    "ip_duplicate" => $ip_duplicates,
                    "dm_duplicate" => $dm_duplicates
                );


               // $reports[] = array(
               //    "branch_code" => $tmpBranchCode,
               //    "zone_code" => $tmpZoneCode,
               //    "dma_code" => $tmpDmaCode,
               //    "dm_code" => $tmpDmCode, 
               //    "ip" => $tmpIP,
               //    "logger_code" => $tmpLoggerCode,
               //    "comm" => $tmpComm,
               //    "rtu_status" => $tmpRtuStatus,
               //    "result" => $result_updateScadaInfo,
               //    "result_query" => $tb_scada_host_info_result
               //  );

               $reports[] = array(
                  "dm_code" => $tmpDmCode,
                  "ip" => $tmpIP,
                  "check_with_existing_result" => $resons
                );



          }



         /* ************************* */
         /* เริ่มกระบวนการส่งค่ากลับ */
         /* ************************* */
         $resultText = "success";

         $reportResult = array("result" =>  $resultText,
                                   "rows" => $reports);

         $app->response()->header("Content-Type", "application/json");
         echo json_encode($reportResult);

         // $return_m = array("msg" => "Hello, Current PHP version: ". phpversion());
         // echo json_encode($return_m);



    }